//1、在结构体中可以对元素大小进行定义
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct a{
	int a:1;//指只用1个字节表示整数 
	int b:3;//注意不超过int原有最大4 
}s; 
struct b{
	int a:3;//struct 具有重排的特性，会趋向于以4/8为一组在内存开辟空间 以方便访问；
	char b;
}b;  
struct c{
	char b;
	int a;
}c;
int main(){
	int a=1;
	s.a=1;s.b=2;
	printf("size of a=%d,size of s=%d,",sizeof(a),sizeof(s));//都是4 
	printf("sise of b=%d,size of c=%d",sizeof(b),sizeof(c));//前者为4，后者为8 
	////////////////////////////////////////////////////////////////////////////
	printf("\n");
	//////////////////////////////////////////////////////////////////////////////
	int b = 0b1110,c=0b0101;//0b二进制，0x16进制，08进制 ，%b%x%o 
	printf("~b=%d,b&c=%d,b^c=%d,b|c=%d\nb=%d,b<<1=%d,b>>1=%d\n",~b,b&c,b^c,b|c,b,b<<1,b>>1);
	//~表反，&表与，^异或，|或，分别为0b0001,0b0100,0b1011,0b1111 
	//负数的补码为反码加1，0b1001->0b1110，加1=-15 
	//<<表示左移相当于乘2，>>右移，相当于除以2 
	//~b=-15,b&c=4,b^c=11,b|c=15
    //b=14,b<<1=28,b>>1=7 
	////////////////////////////////////////////////////////////////////////////////////// 
	//掩码/应用:&判断某些位是否为1以及让某些位关闭, |将结果某些位一定为1，^操作将原有某些位改变状态 
	int flag1=0b0010;//判断第3位是否为1
	printf("b=1110,c=0101判断第3位是否为1:b:%d,c:%d\n",b&flag1,c&flag1); 
	int flag2=0b1101;//让第3位为0 
	printf("b=1110,c=0101让第3位为0:b->%d,c->%d\n",b&flag2,c&flag2);
	int flag3=0b0010;//第3位一定为1
	printf("b=1110,c=0101第3位一定为1：b->%d,c->%d\n",b|flag3,c|flag3);
	printf("b=1110,c=0101,第3位改变状态：b->%d,c->%d",b^flag3,c^flag3);
	//b=1110,c=0101判断第3位是否为1:b:2,c:0
    //b=1110,c=0101让第3位为0:b->12,c->5
	//b=1110,c=0101第3位一定为1：b->14,c->7
	//b=1110,c=0101,第3位改变状态：b->12,c->7 
	 
}

