/*3:数组转换
描述
有n个数字1,2,3…,n，由小至大依次放入栈。问是否存在一种出栈方式，使这n个数字出栈的顺序为a1,a2,…,an。

输入
第一行输入一个整数t，代表有t组测试数据
对于每组测试数据，第一行输入整数n，第二行输入n个数字：a1,a2, … , an
1<= n <= 1000
输出
每组测试数据输出一行。
如果出栈顺序a1,a2,…,an是合法的，输出yes，否则输出no。
样例输入
3
3
1 2 3
3
3 2 1
4
1 4 2 3
样例输出
yes
yes
no*/
//没有及时初始化 

#include<stdio.h>
int main(){
    int flag[1005],flag1=0;//0-未入栈;1-栈中;2-已出栈
    int num;//the num of the number
    int max=0;//the max number in the stack
    
    int j;//the number input now
    int i,k;//the times of input:i
    int m,allnum;//all the times
    scanf("%d",&allnum);
    for(m=0;m<allnum;m++){
    	scanf("%d",&num);
    	flag1=0;max=0;//初始化 ****
    for(i=0;i<=num;i++){//make the flag[] initial
    	flag[i]=0;
    }
    for(i=0;i<num;i++){
    	scanf("%d",&j);//input the number
    	//the rule:all the number smaller than the j and bigger than the max have come in the stack
    	if(j<max){
    	    flag1=1;	
    	}
    	if(j<=0)flag1=1;
    	if(i>num)flag1=1;
    	if(flag[j]==2)flag1=1;
    	flag[j]=2; 
    	for(k=max+1;k<j;k++){
            if(flag[k]==0)flag[k]=1;
    	}
		max=0;
    	for(k=1;k<j;k++){
    		if(flag[k]==1)max=k;
    	}
    }
    if(flag1==1)printf("no\n");
    else printf("yes\n");
    }
	
}
