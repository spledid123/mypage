/*3:求逆序对数
描述
对于一个长度为N的整数序列A，满足i < j 且 Ai > Aj.的数对(i,j)称为整数序列A的一个逆序
请求出整数序列A的所有逆序对个数
输入
输入包含多组测试数据，每组测试数据有两行
第一行为整数N(1 <= N <= 20000)，当输入0时结束
第二行为N个整数，表示长为N的整数序列
输出
每组数据对应一行，输出逆序对的个数
样例输入
5
1 2 3 4 5
5
5 4 3 2 1
1
1
0
样例输出
0
10
0*/

//利用二类归并的手法，τ(A)+τ(B)+τ(A-B)=τ(A+B) 
//因为merge默认两个小文件排过序，因此要排序 
#include<stdio.h>
int merge(int *a,int start,int mid,int ware){//合并两个小文件，并求出小文件间的逆序数 
    int b[ware-start+1];
    int i=start,j=mid+1,k=0;//k为b的下标 
    int sum=0;//逆序数 τ(A-B)
    while(i<=mid&&j<=ware){
    	if(a[i]<=a[j]){
    		b[k++]=a[i++];
    	}
    	else{
    		b[k++]=a[j++];
    		sum+=mid-i+1;
    	}
    }
    while(i<=mid)b[k++]=a[i++];
    while(j<=ware)b[k++]=a[j++];
    for(i=start,k=0;i<=ware;i++,k++) a[i]=b[k]; 
    return  sum;
}
int getthenum(int*a,int start,int ware){
	if(start==ware) return 0;
	int mid=(start+ware)/2;
	int count=0;//逆序数
	count+=getthenum(a,start,mid)+getthenum(a,mid+1,ware)+merge(a,start,mid,ware);
	return count; 
	
}
int main(){
	int n;
	scanf("%d",&n);
	while(n!=0){
		int i=0,sum=0;
		int a[n];
		for(;i<n;i++){
			scanf("%d",&a[i]);
		}
	    sum=getthenum(a,0,n-1);

		printf("%d",sum);	
		scanf("%d",&n);
		if(n!=0)printf("\n");
	
	}
}
