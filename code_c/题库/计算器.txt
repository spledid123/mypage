#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>

int cac(int a,int b,char q)   //基础运算函数 
{
	int c;
	switch(q)
	{
		case'+':c=a+b;
			break;
		case'-':c=a-b;
			break;
		case'*':c=a*b;
			break;
		case'/':c=a/b;
			break;
		case'^':c=pow(a,b);
			break;
		default:;		
	}
	return c;
}

int change()                     //主要运行函数 
{
	char x[600];
	gets(x);                     //输入一行数据 
	char str[600][10]={'\0'};
	int flag[600]={0};
	int i=0,j,p=0;
	for(j=0;j<strlen(x);j++)     //将输入的字符串进行切割 
	{
		if(x[j]=='+'||x[j]=='*'||x[j]=='/'||x[j]=='^')
		{
			str[i][p]=x[j];
			flag[i]=1;
			p++;
		}         //提取运算符并标记 
		else if(x[j]=='('||x[j]==')')
		{
			str[i][p]=x[j];
			flag[i]=2;
			p++;
		}         //提取括号并标记 
		else if(x[j]=='-'&&(x[j+1]<'0'||x[j+1]>'9'))
		{
			str[i][p]=x[j];
			flag[i]=1;
			p++;
		}         //提取减号 
		else if(x[j]=='-'&&(x[j+1]>='0'&&x[j+1]<='9'))
		{
			str[i][p]=x[j];
			flag[i]=0;
			p++;
		}         //对应负数 
		else if(x[j]>='0'&&x[j]<='9')
		{
			str[i][p]=x[j];
			flag[i]=0;
			p++;
		}
		else
		{
			str[i][p]='\0';
			i++;
			p=0;
		}     //出现其他字符（比如空格）则完成一次切分 
	}
	int deta[600]={0},step[600]={0};
	char mark[600];
	int dp=0,mp=0,s=0;
	for(j=0;j<i+1;j++)          //开始正式计算 
	{
		if(flag[j]==0)
		{
			deta[dp]=atoi(str[j]);
			dp++;
		}                       //将数压入数栈内 
		else if(flag[j]==1)     //将运算符压入栈内并标记优先度 
		{
			mark[mp]=str[j][0];
			if(mark[mp]=='+'||mark[mp]=='-')
				step[mp]=0+s;
			else if(mark[mp]=='*'||mark[mp]=='/')
				step[mp]=1+s;
			else
				step[mp]=2+s;
			while(1)    //当靠前的运算符优先度不低于新加入的运算符时可以直接计算 
			{
				if(mp>0&&step[mp-1]>=step[mp])
				{
					deta[dp-2]=cac(deta[dp-2],deta[dp-1],mark[mp-1]);
					dp--;
					mark[mp-1]=mark[mp];
					step[mp-1]=step[mp];
					mp--;
				}
				else
					break;
			}
			mp++;
		}
		else        //括号会增加其中运算符的优先度 
		{
			if(str[j][0]=='(')
				s=s+3;
			else
				s=s-3;
		}
	}
	for(j=mp-1;j>=0;j--)      //继续剩余的计算 
	{
		deta[dp-2]=cac(deta[dp-2],deta[dp-1],mark[j]);
		dp--;
	}
	return deta[0];
}

int main()
{
	int n;
	scanf("%d\n",&n);
	int i;
	int fin[100]={0};
	for(i=0;i<n;i++)
	{
		fin[i]=change();
	}
	for(i=0;i<n;i++)
	{
		printf("%d\n",fin[i]);
	}
	return 0;
}